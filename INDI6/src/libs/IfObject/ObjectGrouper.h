#pragma once
#include "IfObject.h"

#include <eirExe/Configuration.h>
#include <eirType/ObjectType.h>
#include <eirType/SCRectList.h>
#include <eirType/WeightedAverageF.h>
#include <IfGeometry/FaceTypeRect.h>

#include "GrouperMethods.h"
#include "ObjectResults.h"
#include "Quality.h"
class ObjectDetector;

class IFOBJECT_EXPORT ObjectGrouper
{
public:
    enum FrontalFactors
    {
        $nullFrontal = 0,
        FrontalScore,
        FrontalAreaFactor,
        FrontalWidthRatio,
        $sizeFrontal
    };
    enum EyeFactors
    {
        $nullEye = 0,
        EyeScore,
        EyeExEL,
        EyeROI,
        $sizeEye
    };

public:
    ObjectGrouper(ObjectDetector *pDetector, const ObjectType otype);

    ObjectDetector *detector() const  { return mpDetector; }
    ObjectType type() const { return cmType; }
    DetectRectMap detectedRects() const { return mDetectedRects; }
    DetectRectMap eyeTypedRects() const { return mTypedRects; }
    ObjectResults combinedResults() const { return mCombinedResults; }
    ObjectResults groupedResults() const { return mGroupedResults; }
    ObjectResults qualityResults() const { return mQualityResults; }

    bool initialize();
    void clear() { mDetectedRects.clear(), mGroupedResults.clear(); }
    void setConfiguration(const Configuration &aConfig) { mConfig = aConfig; }
    void setDetectedRects(const DetectRectMap &aRectList) { mDetectedRects = aRectList; }
    void assignEyeTypes(const QQPoint offset);
    void setTypedRects(const DetectRectMap aDRMap);
    void combineResults();
    void groupResults();
    void assignQuality();

private:
    ObjectDetector *detector() { return mpDetector; }
    GrouperMethods combineMethod() const;
    GrouperMethods groupMethod() const;
    void combineRects();
    void noCombine();
    void groupByUnion();
    void groupByAverage();
    void groupNoGroup();
    void assignEyeQuality(const SCRect &frect);
    void assignFrontalQuality();
    DetectRectMap rectsForCombine() const;
    bool canCombine(const SCRect itemRect, const SCRect listRect);
    bool canCombineContains(const SCRect itemRect, const SCRect listRect);
    bool canCombineOverlap(const SCRect itemRect, const SCRect listRect);

    qreal frontalResultDistance(const ObjectResults::Item ori, const int maxScore, const Rational areaFraction);
    qreal eyeResultDistance(const ObjectResults::Item &ori, const int maxScore, const FaceTypeRect frect);

private: // static
    static Rational eyeDistanceFactor(const SCRect expected, const SCRect actual);
    static Rational eyeDistanceFactor(const Rational expectedWidth, const Rational actualWidth,
                                      const Rational inflection=Rational(1));

private:
    ObjectDetector *mpDetector=nullptr;
    const ObjectType cmType=ObjectType::$null;
    Configuration mConfig;
    WeightedAverageF mFrontalWA;
    WeightedAverageF mEyeWA;
    DetectRectMap mDetectedRects;
    DetectRectMap mTypedRects;
    ObjectResults mCombinedResults;
    ObjectResults mGroupedResults;
    ObjectResults mQualityResults;
};
//*`
